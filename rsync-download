#!/bin/bash

#I just finished this today - and it is great so far. This is nothing more than a re-written version of my scp wrapper for downloading files from a server using
#rsync instead of scp. Technically, scp is deprecated do to it's vulnerabilities - and Red Hat advises not using it. Well, those guys don't know everything 
#but even if they aren't completely wrong rsync is faster and when used with SSH it has the same encryption features offered by scp. I need to write a full wrapper
#that works with both uploads and downloads - but that is more complicated. I promise at some point to post a version of these scripts written in Go. 


if [[ -z "${1}" ]]; then
    echo "Error: missing an argument. Enter a file or directory"
    echo Ex: \"rsync-download file\"
    exit 1
elif [[ "${1}" == "-h" ]]; then
   echo "Enter a file or directory to download"
   echo Ex: \"rsync-download file\"
   exit 0
fi



logloc="${HOME}/tmp/rsync-download.log" #log file
server="user@domain:/home/user/file"

filearg="${1}"

echo "*${filearg}*" | while read -r line
do
    if {
       echo attempting to download "${filearg}"
         rsync -vrP -e ssh ${server}/"${line}" ~/downloadedmedia | tee -a "${logloc}"
     };then
          exit 0
    else
          echo failed to process "${filearg}" | tee -a "${logloc}"
          exit 1
    fi

 done
