#!/bin/bash 
#NOTE: This is a difficult script to write - and mostly because Linux has so many different ways that it mounts drives and there are so many different mounts which
#can be created to mount them on. Because everything in Linux is a file and any file can be created so long as a user has root access, a drive can be mounted 
#technically anywhere that root wants to put it. All things said, those parameters limit my scripting options but this is a good start for a person having no 
#Idea how many mounted drives are connected to a system. For this to work, you have to at least narrow down the number of drives which need to be searched and 
#there's just no one-size-fixes all way to go about it... Think about priority, think about what's feasible based on time constraints ... then run this 

#Search for externally mounted drives and use the df command to total them. NOTE: This script does not promise to detect all externally mounted drives but it will find a good number of them

totalamnt() {
  sum=0
  while IFS= read -r item; do
    size=$(echo "$item" | sed 's/.$//')  # Remove the last character (the percentage sign)
    unit=$(echo "$item" | sed 's/[0-9.]//g')  # Extract the unit (e.g., G, T, M)

    # Convert sizes to kilobytes for consistent unit
    case "$unit" in
      G) size_kb=$(echo "$size * 1024 * 1024" | bc) ;;
      T) size_kb=$(echo "$size * 1024 * 1024 * 1024" | bc) ;;
      M) size_kb=$(echo "$size * 1024" | bc) ;;  # Convert megabytes to kilobytes
      *) size_kb=$size ;;
    esac

  rounded_size_kb=$(echo "scale=0; ${size_kb:-0} / 1" | bc)
  ((sum += rounded_size_kb))
  done < <(df -hT | grep -v Avail | grep -v tmpfs | grep -v "/dev/fuse" | awk '{ print $5 }')

 sum_gb=$(echo "$sum / 1024 / 1024" | bc) > /dev/null
 if (( sum_gb > 0 )); then
 echo Total amount of free space: "${sum_gb} GB"
 fi
}


if [[ "$1" == "-h" ]]; then
    echo "Only one argument is possible"
    echo "Try \"mountedtotals mounts\""
    exit 0
fi

mntfind() {
find /mnt -mindepth 1 -maxdepth 1
}

mntmedia() {
    find /media -mindepth 1 -maxdepth 1
}

mntdevmapper() {
    find /dev/mapper -mindepth 1 -maxdepth 1
}



if [[ "$1" == "mounts" ]]; then
echo "The following external mount points have been detected though others may also be present: "
echo ============================
mntfind "$@"
echo ============================
mntmedia "$@"

echo ============================
mntdevmapper "$@"
else




drivescalc() {
echo "$(df -hT | head -1)"
echo Drives formatted in native ext4:
echo ==================================
df -hT | grep ext4  
echo Drives formatted with exfat:
echo ==================================
df -hT | grep exfat
echo Drives encrypted with Bitlocker:
echo ==================================
df -hT | grep bitlk
echo Drives encrypted with Veracrypt:
echo ==================================
df -hT | grep veracrypt
#veracryptmnt
}
drivescalc #"$@"
fi
echo ==================================
totalamnt


